
// ****************************************************************************************************
// 2D OB network model to study the mechanisms of gamma oscillations in the olfacotry bulb
// Developed by Guoshi Li, University of North Carolina at Chapel Hill (guoshi_li@med.unc.edu) 

// Simulation results are presented in the associated paper:
// Li and Cleland (2017) A coupled-oscilaltor model of olfacotry bulb gamma oscillations.  
// PLOS Computational Biology (In Press).
// ****************************************************************************************************


xopen("$(NEURONHOME)/lib/hoc/noload.hoc") // standard run tools
xopen("tabchannels.hoc")
nrncontrolmenu()

v_init  = -70    // to match pas 
tstop   = 1500   // simulation time
celsius = 35

dt = 0.002       // simulation step

steps_per_ms = 5  // For graphic display: 5 data points per ms
secondorder  = 2  // Crank-Nicholson integration method


xpanel("Auto launch menu")
  xbutton("Default run 1500ms ", "default_run()")
  xbutton("Short demo 30 ms","demo_run()")
xpanel()

proc advance() {
  fadvance()
}

proc run() {
  running_ = 1
  stdinit()
  continuerun(tstop)
}


proc demo_run() {
  tstop   = 30    // Total simulation time: 0.03 sec
//  Fig_MC()  
  NetStim[0].seed(NSSEED)
  run()
  save_data(seedU, Pre_Odor_L, Pre_Odor_U, Odor_L, Odor_U, Km2p, Wm2p, Wm2g, Wp2m, Wg2m, Wb_PG)
}

proc default_run() {
  
  tstop   = 1500    // Total simulation time: 1.5 sec
//  Fig_MC() 
  NetStim[0].seed(NSSEED)
  run()
  save_data(seedU, Pre_Odor_L, Pre_Odor_U, Odor_L, Odor_U, Km2p, Wm2p, Wm2g, Wp2m, Wg2m, Wb_PG)

}


Odor_U = 0.2
Km2p = 0.4
seedU = 80
Wm2p = 1   // MC to PG   // CHANGED  1 (default) // to 0.5


load_file("Parameter.hoc")
load_file("mathslib.hoc")
load_file("MC_def.hoc") 
load_file("PG_def.hoc")
load_file("GC_def.hoc")             
load_file("Connect.hoc")
load_file("Background.hoc")
load_file("Input.hoc")
load_file("Figure.hoc")
load_file("SaveData.hoc")
//demo_run()

while(seedU<=90){
  Odor_U = 0.2
  while(Odor_U<=2.2){
    Odor_U = Odor_U + 0.2
    load_file("Parameter.hoc")
    load_file("mathslib.hoc")
    load_file(1, "Connect.hoc")
    load_file(1, "Background.hoc")
    load_file(1, "Input.hoc")
    load_file("Figure.hoc")
    load_file(1, "SaveData.hoc")
    default_run()   // change in default_run() for cluster analysis
  }
  seedU = seedU + 5.0
}
 
quit()
